extends layout

block content
  link(rel='stylesheet' href='/bower_components/datatables/media/css/jquery.dataTables.min.css')
  .container

    script.
      function pr() {

        //Variables containing the two database collections
        var deliveryplans = !{JSON.stringify(deliveryplans)}
        var downtimeevents = !{JSON.stringify(downtimeevents)}
        //Dates for filtering databases
        var minDate = document.getElementById('mindate').value;
        minDate = new Date(minDate)
        var maxDate =  new Date(document.getElementById('maxdate').value);
        maxDate = new Date(maxDate)
        //R1 variables
        R1planSum = 0
        R1dur = 0
        R1numEvents = 0
        //R3 variables
        R3planSum = 0
        R3dur = 0
        R3numEvents = 0
        //SPF variables
        SPFplanSum = 0
        SPFdur = 0
        SPFnumEvents = 0
        //
        deliveryplans.forEach(sch => {
          date_deliv = new Date(sch.date);
          if ( (date_deliv >= minDate) && (date_deliv <= maxDate) ){
            R1planSum += sch.R1plan;
            R3planSum += sch.R3plan;
            SPFplanSum += sch.SPFplan;
            }
        }),
        downtimeevents.forEach(dt => {
          date_down = new Date(dt.date);
          if ( (date_down >= minDate) && (date_down <= maxDate) && (dt.archived != true)){
            if ( dt.machine == 'R1'){
              R1dur += dt.duration;
              R1numEvents += 1
              }
            if ( dt.machine == 'R3'){
              R3dur += dt.duration;
              R3numEvents += 1
              }
            if ( dt.machine == 'I'){
              SPFdur += dt.duration;
              SPFnumEvents += 1
              }
          }
        }),
        //calculate more R1 variables
        R1dur = (R1dur/60).toFixed(2)
        R1uptime = ( 100*(R1planSum - R1dur) / R1planSum ).toFixed(2)
        R1MTTR = (R1dur/R1numEvents).toFixed(2)
        R1MTBF = ((R1planSum - R1dur)/R1numEvents).toFixed(2)
        R1MTTF = (R1planSum/R1numEvents).toFixed(2)
        //calculate more R3 variables
        R3dur = (R3dur/60).toFixed(2)
        R3uptime = ( 100*(R3planSum - R3dur) / R3planSum ).toFixed(2)
        R3MTTR = (R3dur/R3numEvents).toFixed(2)
        R3MTBF = ((R3planSum - R3dur)/R3numEvents).toFixed(2)
        R3MTTF = (R3planSum/R3numEvents).toFixed(2)
        //calculate more SPF R1 variables
        SPFdur = (SPFdur/60).toFixed(2)
        SPFuptime = ( 100*(SPFplanSum -SPFdur) /SPFplanSum ).toFixed(2)
        SPFMTTR = (SPFdur/SPFnumEvents).toFixed(2)
        SPFMTBF = ((SPFplanSum -SPFdur)/SPFnumEvents).toFixed(2)
        SPFMTTF = (SPFplanSum/SPFnumEvents).toFixed(2)
        //R1 elements to span
        document.getElementById("R1planSum").innerHTML = R1planSum
        document.getElementById("R1dur").innerHTML = R1dur
        document.getElementById("R1uptime").innerHTML = R1uptime
        document.getElementById("R1MTTR").innerHTML = R1MTTR
        document.getElementById("R1MTTF").innerHTML = R1MTTF
        document.getElementById("R1MTBF").innerHTML = R1MTBF
        //R3 elements to span
        document.getElementById("R3planSum").innerHTML = R3planSum
        document.getElementById("R3dur").innerHTML = R3dur
        document.getElementById("R3uptime").innerHTML = R3uptime
        document.getElementById("R3MTTR").innerHTML = R3MTTR
        document.getElementById("R3MTTF").innerHTML = R3MTTF
        document.getElementById("R3MTBF").innerHTML= R3MTBF
        //SPF elements to span
        document.getElementById("SPFplanSum").innerHTML = SPFplanSum
        document.getElementById("SPFdur").innerHTML = SPFdur
        document.getElementById("SPFuptime").innerHTML = SPFuptime
        document.getElementById("SPFMTTR").innerHTML = SPFMTTR
        document.getElementById("SPFMTTF").innerHTML = SPFMTTF
        document.getElementById("SPFMTBF").innerHTML = SPFMTBF
      }


    meta(name='viewport', content='width=device-width, initial-scale=1')
    style.
      * {
        box-sizing: border-box;
        }
        /* Create two equal columns that floats next to each other */
        .columnButton {
        float: left;
        width: 28%;
        padding: 10px;
        height: 630px;
        }
        .columnPie {
        float: left;
        width: 72%;
        padding: 10px;
        height: 630px;
        }
        /* Clear floats after the columns */
        .row:after {
        content: "";
        display: table;
        clear: both;
        }
        /* Responsive layout - makes the two columns stack on top of each other instead of next to each other */
        @media screen and (max-width: 1200px) {
        .columnButton {
        width: 100%;
        }
        .columnPie {
        width: 100%;
        }
        }

    style.
      .custombutton {
      cursor:pointer;
      background-color:#2ECC71;
      color: white;
      border: 5px solid #66ccff;
      border-radius: 10%;
      height:60px;width:60px;
      text-align: center;
      text-decoration: none;
      font-size: 18px;
      -webkit-transition-duration: 0.75s; /* safari */
      transition-duration: 0.75s;
      }
    style.
      .togglebutton {
      cursor:pointer;
      background-color:#66ccff;
      color: white;
      border: 5px solid #2ECC71;
      border-radius: 10%;
      height:60px;width:60px;
      text-align: center;
      text-decoration: none;
      font-size: 14px;
      -webkit-transition-duration: 0.75s; /* safari */
      transition-duration: 0.75s;
      }
  body(onload='pr()')
    <br>
    center
      h2(align='center') Downtime Index
      <br>
      .row
        .columnButton
          h4 Toggle machines
          |
          table#buttontable.display(style='width:100%')
            tbody
              tr
                td
                  center
                    button.togglebutton(value=1, onclick='click_machine(id)')#All_button Toggle all
                td
                  center
                    button.custombutton(value=1, onclick='click_machine(id)')#I_button SPF
                td
                  center
                    button.custombutton(value=1, onclick='click_machine(id)')#R1_button R1
                td
                  center
                    button.custombutton(value=1, onclick='click_machine(id)')#R3_button R3
          |
          h4 Toggle event codes
          |
          table#codetable.display(style='width:100%')
            tbody
              tr
                td
                  center
                    button.togglebutton(value=1, onclick='click_code(id)')#Allcodes_button Toggle all
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#Bcode_button B
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#BIcode_button BI
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#CTcode_button CT
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#DIAcode_button DIA
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#HEcode_button HE
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#HLScode_button HLS
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#Icode_button I
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#IDcode_button ID
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#INFcode_button INF
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#LAScode_button LAS
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#MAGcode_button MAG
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#MMLcode_button MML
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#MPScode_button MPS
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#NETcode_button NET
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#OIcode_button OI
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#OTcode_button OT
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#PLCcode_button PLC
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#PSScode_button PSS
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#RFcode_button RF
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#UIcode_button UI
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#UTcode_button UT
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#VACcode_button VAC
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#WATcode_button WAT
              tr
                td
                  center
                    button.custombutton(value=1, onclick='click_code(id)')#WDcode_button WD

        |
        .columnPie
          h4 Downtime distribution
          |
          #container
          //(style='min-width: 300px; height: 625px; max-width: 800px; margin: 0 auto')

    br
    //##############################################
    //Machine selection button logic
    //##############################################
    style.
      #buttontable {
      border-collapse: separate;
      border-spacing: 10px;
      }
    script.
      function click_machine(id) {
      machinebutton_array=['I_button', 'R1_button','R3_button']
      //If button is off then a click turns it on
      if( document.getElementById(id).value == 0){
        document.getElementById(id).value = 1;
        document.getElementById(id).style.background = "#2ECC71";
        if (id=='All_button'){
          document.getElementById(id).style.background = "#66ccff";
          for (var i = 0; i < machinebutton_array.length; i++) {
            document.getElementById(machinebutton_array[i]).value = 1;
            document.getElementById(machinebutton_array[i]).style.background = "#2ECC71";
          }
        }
      }
      else{
        document.getElementById(id).value = 0;
        document.getElementById(id).style.background = "#ffb84d";
        if (id=='All_button'){
          document.getElementById(id).style.background = "#66ccff";
          for (var i = 0; i < machinebutton_array.length; i++) {
            document.getElementById(machinebutton_array[i]).value = 0;
            document.getElementById(machinebutton_array[i]).style.background = "#ffb84d";
          }
        }
      }
      var table = $('#example').DataTable();
      table.draw()
      chart.series[0].setData(plotdata);
      chart.redraw();
      }
    <br>
    //##############################################
    //Code selection button logic
    //##############################################
    style.
      #codetable {
      border-collapse: separate;
      border-spacing: 10px;
      }
    script.
      function click_code(id) {
      codebutton_array=['Bcode_button', 'BIcode_button', 'CTcode_button','DIAcode_button','HEcode_button', 'HLScode_button','Icode_button', 'IDcode_button', 'INFcode_button', 'LAScode_button', 'MAGcode_button', 'MMLcode_button', 'MPScode_button', 'NETcode_button', 'OIcode_button', 'OTcode_button', 'PLCcode_button', 'PSScode_button', 'RFcode_button', 'UIcode_button', 'UTcode_button', 'VACcode_button', 'WATcode_button','WDcode_button']
      //If button is off then a click turns it on
        if( document.getElementById(id).value == 0){
          document.getElementById(id).value = 1;
          document.getElementById(id).style.background = "#2ECC71";
          if (id=='Allcodes_button'){
            document.getElementById(id).style.background = "#66ccff";
            for (var i = 0; i < codebutton_array.length; i++) {
              document.getElementById(codebutton_array[i]).value = 1;
              document.getElementById(codebutton_array[i]).style.background = "#2ECC71";
            }
          }
        }
        else{
          document.getElementById(id).value = 0;
          document.getElementById(id).style.background = "#ffb84d";
          if (id=='Allcodes_button'){
            document.getElementById(id).style.background = "#66ccff";
            for (var i = 0; i < codebutton_array.length; i++) {
              document.getElementById(codebutton_array[i]).value = 0;
              document.getElementById(codebutton_array[i]).style.background = "#ffb84d";
            }
          }
        }
        var table = $('#example').DataTable();
        table.draw()
        chart.series[0].setData(plotdata);
        chart.redraw();
      }

    //##############################################
    //Filter by range table
    //##############################################
    //class for the filtertable
    style.
      #filtertable {
      border-collapse: separate;
      border-spacing: 10px;
      }
    //the filter table
    table(frame='above',style='width:100%')#filtertable
      tbody
        tr
          td Min duration(min):
          td
            input#mindur(name='mindur', type='number', value=0, min=0, step=1)
          td Min date:
          td
            - var min_d = (new Date().getFullYear())+"-01-01"
            input#mindate(name='mindate', type='date', value=min_d, oninput='pr()')
          td Min time:
          td
            input#mintime(name='mintime', type='string', value='00:00')
        tr
          td Max duration(min):
          td
            input#maxdur(name='maxdur', type='number',value=999999, min=0, step=1)
          td Max date:
          td
            - var max_d = new Date()
            - max_d = max_d.getFullYear() + '-' + ('0' + (max_d.getMonth()+1)).slice(-2) + '-'  + ('0' + max_d.getDate()).slice(-2)
            input#maxdate(name='maxdate', type='date', value=max_d, oninput='pr()')
          td max time
          td
            input#maxtime(name='maxtime', type='string', value='23:59')
    br
    table(frame='below', style='width:100%')
      tr
        th Machine
        th Planned delivery (h)
        th total downtime (h)
        th uptime (%)
        th MTTR (h)
        th MTTF (h)
        th MTBF (h)
      tr
        th R1
        td
          span#R1planSum
        td
          span#R1dur
        td
          span#R1uptime
        td
          span#R1MTTR
        td
          span#R1MTTF
        td
          span#R1MTBF
      tr
        th R3
        td
          span#R3planSum
        td
          span#R3dur
        td
          span#R3uptime
        td
          span#R3MTTR
        td
          span#R3MTTF
        td
          span#R3MTBF
      tr
        th SPF
        td
          span#SPFplanSum
        td
          span#SPFdur
        td
          span#SPFuptime
        td
          span#SPFMTTR
        td
          span#SPFMTTF
        td
          span#SPFMTBF

    //##############################################
    //The downtime event table
    //##############################################
    center
      h4 Downtime table
    table#example.display(style='width:100%').compact
      thead
          tr
            th(width='0') Description
            th(width='16%') Date
            th(width='16%') Time
            th(width='16%') Timestamp/Link
            th(width='16%') Code
            th(width='16%') Machine
            th(width='16%') Duration (minutes)
            th(width='16%') Author
      tbody
        each downtimeevent, i in downtimeevents
          if(downtimeevent.archived != true)
            tr
              td
                a #{downtimeevent.description}
              td
                a #{downtimeevent.date}
              td
                a #{downtimeevent.time}
              td
                a(href="/downtimeevent/id/"+downtimeevent._id) <button type="button" style='cursor:pointer;background-color:white;color:#66ccff;border: 3px solid #66ccff;border-radius: 6%;height:32px;width:140px;text-align: center;text-decoration: none;font-size: 14px;font-weight: bold;'>#{downtimeevent.date}, #{downtimeevent.time}</button>
              td
                a #{downtimeevent.code}
              td
                a #{downtimeevent.machine}
              td
                a #{downtimeevent.duration}
              td
                a #{downtimeevent.operator}
      tfoot
        tr
          th
          th
          th
          th
          th
          th
          th
          th
    <br>

    //##############################################
    //datatable and highcharts scripts
    //##############################################
    //Basic datatables dependencies
    script(src='/bower_components/jquery/dist/jquery.js')
    script(src='/bower_components/datatables/media/js/jquery.dataTables.min.js')
    //download copy or print filtered datatable
    script(src='bower_components/datatables.net-buttons/js/dataTables.buttons.min.js')
    script(src='bower_components/datatables.net-buttons/js/buttons.html5.min.js')
    //Highcharts dependencies
    script(src='/bower_components/highcharts/highcharts.js')
    script(src='/bower_components/highcharts/modules/exporting.js')
    script(src='/bower_components/highcharts/modules/export-data.js')
    //addition function for datatables
    script.
      jQuery.fn.dataTable.Api.register( 'sum()', function ( ) {
      return this.flatten().reduce( function ( a, b ) {
        if ( typeof a === 'string' ) {
            a = a.replace(/[^\d.-]/g, '') * 1;
        }
        if ( typeof b === 'string' ) {
            b = b.replace(/[^\d.-]/g, '') * 1;
        }
        return a + b;
        }, 0 );
      } );

    //Initialize datatable and piechart
    script.
      $(document).ready(function() {
        $('#example').DataTable( {
          "order": [[ 3, "desc" ]],
          dom: 'fBrtlip',
          buttons: [
          'csvHtml5', 'copyHtml5'
          ],
          drawCallback: function () {
            var api = this.api();
            total = api.column( 6, {search:'applied'} ).data().sum()/60
            nrows =$('#example').DataTable().column(6, {search: 'applied'} ).data().count()
            var mindate = new Date($('#mindate').val());
            var maxdate = new Date($('#maxdate').val());
            var timeDiff = maxdate.getTime() - mindate.getTime();
            var diffHours = timeDiff/(1000*3600);

            $( api.table().column(6).footer() ).html(
            'Total downtime: ' +Math.round(total*100)/100 + ' h'
            );

            var code_data = $('#example').DataTable().columns(4, { filter: 'applied' } ).data()
            var dur_data = $('#example').DataTable().columns(6, { filter: 'applied' } ).data()
            code_array = ["B", "BI", "CT","DIA","HE", "HLS", "I","ID","INF", "LAS", "MAG", "MML", "MPS", "NET", "OI", "OT", "PLC", "PSS", "RF", "UI", "UT", "VAC", "WAT", "WD"];
            sum_array = Array.apply(null, Array(code_array.length)).map(Number.prototype.valueOf,0);
            for (var n = 0; n < code_array.length; n++) {
              for (var i = 0; i < code_data[0].length; i++) {
                if(typeof(code_data[0][i]) != undefined){
                  lenCode = code_data[0][i].length;
                  eventCode = code_data[0][i].substring(3, lenCode-4);
                  lenDur = dur_data[0][i].length;
                  eventDur = dur_data[0][i].substring(3, lenDur-4);
                  if (eventCode == code_array[n]){
                    sum_array[n] += Number(eventDur)
                    }
                  }
                }
              }
            plotdata = []

            for(var i=0; i < code_array.length; i++) {
              if (sum_array[i]!=0){
                plotdata.push({
                name: code_array[i],
                y: sum_array[i]
              });
              }
            }

            },
          "columnDefs": [
            { "targets": [ 0, 1, 2 ], "visible": false},
            //No need to search timestamp column, since date and time column is already being seached
            { "searchable": false, "targets": 3 }
            ]

        } );


      // Event listener to the range filtering inputs to redraw on input
      var table = $('#example').DataTable();
      $('#mindur, #maxdur, #mindate, #maxdate, #mintime, #maxtime').keyup( function() {
        table.draw();
        chart.series[0].setData(plotdata);
        chart.redraw();
      } );

      // Event listener to the range filtering inputs to redraw on input
      $('input[type="search"]').keyup(function() {
        chart.series[0].setData(plotdata);
        chart.redraw();
      } );


      //PieChart
      $(function () {
      chart = new Highcharts.Chart({
        chart: {
            height: 600,
            renderTo: 'container',
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
        text: ""
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
              enabled: true,
              format: '<b>{point.name}: {point.percentage:.1f} </b> %',
              style: {
                  color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
              }
          }
        }
        },
        series: [{
            name: 'Downtime',
            colorByPoint: true,
            data: plotdata
            }],

        exporting: {
        buttons: {
          contextButton: {
            menuItems: ["printChart",
                        "separator",
                        "downloadPNG",
                        "downloadJPEG",
                        "downloadPDF",
                        "downloadSVG",
                        "separator",
                        "downloadCSV",
                        "downloadXLS",
                        //"viewData",
                        //"openInCloud"
                        ]
          }
        }
        }

        });

      });


      } );


    script.
      // Custom filtering function which will search data in column four between two values
      $.fn.dataTable.ext.search.push(
        function( settings, data, dataIndex ) {
          //duration
          var mindur = parseFloat( $('#mindur').val(), 10 );
          var maxdur = parseFloat( $('#maxdur').val(), 10 );
          var dur = parseFloat( data[6] ) || 0; // use data from the duration column

          //date
          var mindate = $('#mindate').val();
          var maxdate = $('#maxdate').val();
          //fix date format
          var date = (data[1]) || 0; // use data from the date column

          //time
          var mintime = $('#mintime').val();
          mintime = Number(mintime.substring(0, 2)) + Number(mintime.substring(3, 5))/60
          var maxtime = $('#maxtime').val();
          maxtime = Number(maxtime.substring(0, 2)) + Number(maxtime.substring(3, 5))/60
          //fix time format
          var T = (data[2]) || 0; // use data from the time column
          T = Number(T.substring(0, 2)) + Number(T.substring(3, 5))/60

          //Machine selcection
          machine =(data[5]); // use data from the Machine column
          machine_array=['I_button', 'R1_button', 'R3_button']
          machine_selection=[]
          for (var i = 0; i < machine_array.length; i++) {
            if(document.getElementById(machine_array[i]).value == 1){
              machine_selection.push(document.getElementById(machine_array[i]).id.replace('_button',''));
              }
            }

          //code selection
          event_code =(data[4]); // use data from the code column
          codebutton_array=['Bcode_button', 'BIcode_button', 'CTcode_button','DIAcode_button','HEcode_button', 'HLScode_button', 'Icode_button', 'IDcode_button', 'INFcode_button', 'LAScode_button', 'MAGcode_button', 'MMLcode_button', 'MPScode_button', 'NETcode_button', 'OIcode_button', 'OTcode_button', 'PLCcode_button', 'PSScode_button', 'RFcode_button', 'UIcode_button', 'UTcode_button', 'VACcode_button', 'WATcode_button', 'WDcode_button']
          code_selection = []
          for (var i = 0; i < codebutton_array.length; i++) {
            if(document.getElementById(codebutton_array[i]).value == 1){
              code_selection.push(document.getElementById(codebutton_array[i]).id.replace('code_button',''));
              }
            }

            if ( ( mindur <= dur   && dur <= maxdur ) && ( mindate <= date   && date <= maxdate) && ( mintime <= T  && T <=  maxtime ) && (code_selection.includes(event_code)) &&(machine_selection.includes(machine)) )
              {
              return true;
              }
              return false;
          }
      );

